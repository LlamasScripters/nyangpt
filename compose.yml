services:
  postgres:
    image: postgres:17.4
    container_name: nyangpt-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nyangpt
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nyangpt-network


  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: nyangpt-api
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/nyangpt
      PORT: 3000
      NODE_ENV: "${NODE_ENV}"
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run start:dev
    networks:
      - nyangpt-network


  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nyangpt-client
    ports:
      - "5173:5173"
    depends_on:
      - api
    environment:
      VITE_API_URL: http://api:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host
    networks:
      - nyangpt-network

volumes:
  postgres-data:

networks:
  nyangpt-network:
    driver: bridge